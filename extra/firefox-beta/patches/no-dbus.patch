diff --git a/toolkit/components/remote/moz.build b/toolkit/components/remote/moz.build
index d3bab6cf9a..656b32c7fa 100644
--- a/toolkit/components/remote/moz.build
+++ b/toolkit/components/remote/moz.build
@@ -26,7 +26,7 @@ if CONFIG["MOZ_WIDGET_TOOLKIT"] == "gtk":
             "nsUnixRemoteServer.h",
             "RemoteUtils.h",
         ]
-    else:
+    elif CONFIG["MOZ_X11"]:
         SOURCES += [
             "nsGTKRemoteServer.cpp",
             "nsXRemoteClient.cpp",
diff --git a/toolkit/components/remote/nsRemoteService.cpp b/toolkit/components/remote/nsRemoteService.cpp
index b2499d8191..9eb10c36ac 100644
--- a/toolkit/components/remote/nsRemoteService.cpp
+++ b/toolkit/components/remote/nsRemoteService.cpp
@@ -13,11 +13,13 @@
 #ifdef MOZ_WIDGET_GTK
 #  include "mozilla/WidgetUtilsGtk.h"
 #  include "nsGTKRemoteServer.h"
-#  ifdef MOZ_ENABLE_DBUS
+#  ifdef defined(MOZ_ENABLE_DBUS)
 #    include "nsDBusRemoteServer.h"
 #    include "nsDBusRemoteClient.h"
-#  else
+#  elif defined(MOZ_X11)
 #    include "nsXRemoteClient.h"
+#  else
+#    include "nsRemoteClient.h"
 #  endif
 #elif defined(XP_WIN)
 #  include "nsWinRemoteServer.h"
@@ -102,8 +104,10 @@ RemoteResult nsRemoteService::StartClient(const char* aDesktopStartupID) {
 #ifdef MOZ_WIDGET_GTK
 #  if defined(MOZ_ENABLE_DBUS)
   client = MakeUnique<nsDBusRemoteClient>();
-#  else
+#  elif defined(MOZ_X11)
   client = MakeUnique<nsXRemoteClient>();
+#  else
+  return REMOTE_NOT_FOUND;
 #  endif
 #elif defined(XP_WIN)
   client = MakeUnique<nsWinRemoteClient>();
@@ -146,8 +150,10 @@ void nsRemoteService::StartupServer() {
 #ifdef MOZ_WIDGET_GTK
 #  if defined(MOZ_ENABLE_DBUS)
   mRemoteServer = MakeUnique<nsDBusRemoteServer>();
-#  else
+#  elif defined(MOZ_X11)
   mRemoteServer = MakeUnique<nsGTKRemoteServer>();
+#  else
+  return;
 #  endif
 #elif defined(XP_WIN)
   mRemoteServer = MakeUnique<nsWinRemoteServer>();
diff --git a/toolkit/library/rust/shared/Cargo.toml b/toolkit/library/rust/shared/Cargo.toml
index 7c1c0acd4f..7761676841 100644
--- a/toolkit/library/rust/shared/Cargo.toml
+++ b/toolkit/library/rust/shared/Cargo.toml
@@ -43,7 +43,7 @@ bitsdownload = { path = "../../../components/bitsdownload", optional = true }
 storage = { path = "../../../../storage/rust" }
 bookmark_sync = { path = "../../../components/places/bookmark_sync", optional = true }
 chardetng_c = "0.1.1"
-audio_thread_priority = { version = "0.26.1" }
+audio_thread_priority = { version = "0.26.1", default_features = false, features = ["winapi"] }
 mdns_service = { path="../../../../dom/media/webrtc/transport/mdns_service", optional = true }
 neqo_glue = { path = "../../../../netwerk/socket/neqo_glue" }
 wgpu_bindings = { path = "../../../../gfx/wgpu_bindings" }
